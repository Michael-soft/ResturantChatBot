{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tosin\\\\OneDrive\\\\Desktop\\\\Third Semster Assesment\\\\Restaurant ChatBot\\\\frontend\\\\src\\\\components\\\\ChatBot.js\";\nimport React, { useState } from 'react';\nfunction ChatBot() {\n  const [messages, setMessages] = useState([{\n    text: 'Hello! Welcome to our restaurant. How can I help you today?',\n    sender: 'bot'\n  }]);\n  const [inputText, setInputText] = useState('');\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (inputText.trim() === '') {\n      return;\n    }\n\n    // Add user message\n    const newMessages = [...messages, {\n      text: inputText,\n      sender: 'user'\n    }];\n    setMessages(newMessages);\n    setInputText('');\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botResponse = {\n        text: 'Thank you for your message. Our team will assist you shortly.',\n        sender: 'bot'\n      };\n      setMessages([...newMessages, botResponse]);\n    }, 1000);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      border: '1px solid #ddd',\n      borderRadius: '8px',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    style: {\n      height: '400px',\n      overflowY: 'auto',\n      padding: '20px',\n      backgroundColor: '#f9f9f9'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      marginBottom: '10px',\n      textAlign: message.sender === 'user' ? 'right' : 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      padding: '10px 15px',\n      borderRadius: '18px',\n      backgroundColor: message.sender === 'user' ? '#007bff' : '#e9ecef',\n      color: message.sender === 'user' ? 'white' : 'black',\n      maxWidth: '70%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, message.text)))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSendMessage,\n    style: {\n      display: 'flex',\n      padding: '10px',\n      borderTop: '1px solid #ddd'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    onChange: e => setInputText(e.target.value),\n    placeholder: \"Type your message...\",\n    style: {\n      flex: 1,\n      padding: '10px',\n      borderRadius: '4px',\n      border: '1px solid #ddd',\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      padding: '10px 20px',\n      backgroundColor: '#007bff',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n}\nexport default ChatBot;","map":{"version":3,"names":["React","useState","ChatBot","messages","setMessages","text","sender","inputText","setInputText","handleSendMessage","e","preventDefault","trim","newMessages","setTimeout","botResponse","createElement","className","style","maxWidth","margin","border","borderRadius","overflow","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","padding","backgroundColor","map","message","index","key","marginBottom","textAlign","display","color","onSubmit","borderTop","type","value","onChange","target","placeholder","flex","marginRight","cursor"],"sources":["C:/Users/tosin/OneDrive/Desktop/Third Semster Assesment/Restaurant ChatBot/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChatBot() {\r\n  const [messages, setMessages] = useState([\r\n    { text: 'Hello! Welcome to our restaurant. How can I help you today?', sender: 'bot' }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    // Add user message\r\n    const newMessages = [...messages, { text: inputText, sender: 'user' }];\r\n    setMessages(newMessages);\r\n    setInputText('');\r\n\r\n    // Simulate bot response\r\n    setTimeout(() => {\r\n      const botResponse = { \r\n        text: 'Thank you for your message. Our team will assist you shortly.', \r\n        sender: 'bot' \r\n      };\r\n      setMessages([...newMessages, botResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\" style={{ \r\n      maxWidth: '600px', \r\n      margin: '0 auto', \r\n      border: '1px solid #ddd', \r\n      borderRadius: '8px',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <div className=\"chat-messages\" style={{ \r\n        height: '400px', \r\n        overflowY: 'auto', \r\n        padding: '20px',\r\n        backgroundColor: '#f9f9f9'\r\n      }}>\r\n        {messages.map((message, index) => (\r\n          <div \r\n            key={index} \r\n            style={{ \r\n              marginBottom: '10px',\r\n              textAlign: message.sender === 'user' ? 'right' : 'left'\r\n            }}\r\n          >\r\n            <div style={{ \r\n              display: 'inline-block',\r\n              padding: '10px 15px',\r\n              borderRadius: '18px',\r\n              backgroundColor: message.sender === 'user' ? '#007bff' : '#e9ecef',\r\n              color: message.sender === 'user' ? 'white' : 'black',\r\n              maxWidth: '70%'\r\n            }}>\r\n              {message.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSendMessage} style={{ \r\n        display: 'flex', \r\n        padding: '10px',\r\n        borderTop: '1px solid #ddd'\r\n      }}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={(e) => setInputText(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          style={{ \r\n            flex: 1, \r\n            padding: '10px', \r\n            borderRadius: '4px',\r\n            border: '1px solid #ddd',\r\n            marginRight: '10px'\r\n          }}\r\n        />\r\n        <button \r\n          type=\"submit\"\r\n          style={{ \r\n            padding: '10px 20px', \r\n            backgroundColor: '#007bff', \r\n            color: 'white', \r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,OAAOA,CAAA,EAAG;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,CACvC;IAAEI,IAAI,EAAE,6DAA6D;IAAEC,MAAM,EAAE;EAAM,CAAC,CACvF,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,SAAS,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3B;IACF;;IAEA;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGV,QAAQ,EAAE;MAAEE,IAAI,EAAEE,SAAS;MAAED,MAAM,EAAE;IAAO,CAAC,CAAC;IACtEF,WAAW,CAACS,WAAW,CAAC;IACxBL,YAAY,CAAC,EAAE,CAAC;;IAEhB;IACAM,UAAU,CAAC,MAAM;MACf,MAAMC,WAAW,GAAG;QAClBV,IAAI,EAAE,+DAA+D;QACrEC,MAAM,EAAE;MACV,CAAC;MACDF,WAAW,CAAC,CAAC,GAAGS,WAAW,EAAEE,WAAW,CAAC,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEf,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAACC,KAAK,EAAE;MACxCC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACA7B,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MACpCY,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE,MAAM;MACjBC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE;IACnB,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACC1B,QAAQ,CAAC+B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BpC,KAAA,CAAAgB,aAAA;IACEqB,GAAG,EAAED,KAAM;IACXlB,KAAK,EAAE;MACLoB,YAAY,EAAE,MAAM;MACpBC,SAAS,EAAEJ,OAAO,CAAC7B,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG;IACnD,CAAE;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEF7B,KAAA,CAAAgB,aAAA;IAAKE,KAAK,EAAE;MACVsB,OAAO,EAAE,cAAc;MACvBR,OAAO,EAAE,WAAW;MACpBV,YAAY,EAAE,MAAM;MACpBW,eAAe,EAAEE,OAAO,CAAC7B,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;MAClEmC,KAAK,EAAEN,OAAO,CAAC7B,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO;MACpDa,QAAQ,EAAE;IACZ,CAAE;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACCM,OAAO,CAAC9B,IACN,CACF,CACN,CACE,CAAC,eACNL,KAAA,CAAAgB,aAAA;IAAM0B,QAAQ,EAAEjC,iBAAkB;IAACS,KAAK,EAAE;MACxCsB,OAAO,EAAE,MAAM;MACfR,OAAO,EAAE,MAAM;MACfW,SAAS,EAAE;IACb,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACA7B,KAAA,CAAAgB,aAAA;IACE4B,IAAI,EAAC,MAAM;IACXC,KAAK,EAAEtC,SAAU;IACjBuC,QAAQ,EAAGpC,CAAC,IAAKF,YAAY,CAACE,CAAC,CAACqC,MAAM,CAACF,KAAK,CAAE;IAC9CG,WAAW,EAAC,sBAAsB;IAClC9B,KAAK,EAAE;MACL+B,IAAI,EAAE,CAAC;MACPjB,OAAO,EAAE,MAAM;MACfV,YAAY,EAAE,KAAK;MACnBD,MAAM,EAAE,gBAAgB;MACxB6B,WAAW,EAAE;IACf,CAAE;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eACF7B,KAAA,CAAAgB,aAAA;IACE4B,IAAI,EAAC,QAAQ;IACb1B,KAAK,EAAE;MACLc,OAAO,EAAE,WAAW;MACpBC,eAAe,EAAE,SAAS;MAC1BQ,KAAK,EAAE,OAAO;MACdpB,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnB6B,MAAM,EAAE;IACV,CAAE;IAAA3B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACH,MAEO,CACJ,CACH,CAAC;AAEV;AAEA,eAAe3B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}